{"version":3,"sources":["Alarm-clock-sound-short.mp3","clock.js","display.js","button.js","serviceWorker.js","index.js"],"names":["module","exports","timeValue","timeLeftInterval","Exhibit","id","this","props","breakV","session","style","color","mins","timeLabel","React","Component","Set","increase","label","decrease","className","increment","type","title","tabIndex","onClick","value","aria-hidden","decrement","Operator","control","callBack","icon","display","Control","playOperator","update","resetOperator","initialize","PomoClock","state","timeDisplay","action","timerLabel","resetClock","bind","setIncrease","setDecrease","getCount","countDown","countEnd","stopTimer","correctTime","clearInterval","setState","labelT","document","getElementById","play","then","num","countTimer","split","parseInt","minutes","seconds","setInterval","Math","floor","console","log","event","target","breakValue","sessionValue","audioEL","pause","currentTime","playIcon","playFunction","left","right","displayValues","clockControl","src","mp3","href","rel","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.48226309.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Alarm-clock-sound-short.1d401d80.mp3\";","import React from 'react';\nimport './clock.css';\nimport {Exhibit} from './display.js';\nimport {Set, Control} from './button.js';\nimport mp3 from './Alarm-clock-sound-short.mp3';\n// Gobal variable\nlet timeValue; // value for checking the break and session\nlet timeLeftInterval;\n\n// Complete clock layout\nexport class PomoClock extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {breakV: 5, session: 25,\n                  timeDisplay: '25:00',\n                  action: 'stop', timerLabel: 'Session', color: '#000000'};\n    this.resetClock  = this.resetClock.bind(this);\n    this.setIncrease = this.setIncrease.bind(this);\n    this.setDecrease = this.setDecrease.bind(this);\n    this.getCount    = this.getCount.bind(this);\n    this.countDown   = this.countDown.bind(this);\n    this.countEnd    = this.countEnd.bind(this);\n    this.stopTimer   = this.stopTimer.bind(this);\n    this.correctTime = this.correctTime.bind(this);\n  }\n\n  stopTimer(){\n    //console.log('Before: ' + this.state.timeDisplay);\n    clearInterval(timeLeftInterval);\n    this.setState({action: 'pause'});\n  \n  }\n\n  countEnd(){\n    var labelT;\n    if (this.state.timerLabel === 'Session') {\n      labelT = 'Break';\n    }\n    else {\n      labelT = 'Session';\n    }\n    var audioPro = document.getElementById('beep').play();\n    audioPro.then();\n    this.setState(()=>{return {timeDisplay: '00:00',timerLabel: labelT}});\n    clearInterval(timeLeftInterval);\n    this.countDown();\n    //console.log(this.state.timerLabel);\n  }\n  correctTime(num){\n    var number = num < 10 ? ('0'+ num) :num;\n    return number;\n  }\n  // Create the value to start counting from\n  getCount(){\n    var action = this.state.action;\n    var countTimer;\n    if(action === 'stop'){  // check if clock just loaded or clock was reset\n      countTimer = this.state.session * 60;\n      this.setState(()=>{return {action: 'play', timeDisplay: (this.correctTime(this.state.session) +':00'), color: 'black'}}); // ,timerLabel: 'Session'\n    }\n    else if(action === 'pause'){ // Check if clock was paused\n      var value = this.state.timeDisplay.split(':');\n      countTimer = (parseInt(value[0]) * 60) + parseInt(value[1]);\n      this.setState(()=>{return {action: 'play'}});\n    }\n    else if (action === 'play') { // Check which count down was last ran\n      if (this.state.timerLabel === 'Break') {\n        countTimer = (this.state.breakV * 60);\n        this.setState(()=>{return {timeDisplay: (this.correctTime(this.state.breakV) +':00'), color: 'black'}}); // timerLabel: 'Break',\n      }\n      else if (this.state.timerLabel === 'Session') {\n        countTimer = (this.state.session * 60);\n        this.setState(()=>{return {timeDisplay: (this.correctTime(this.state.session) +':00'), color: 'black'}});  // timerLabel: 'Session',\n      }\n    }\n    return countTimer; // return the count down value\n  }\n  countDown(){\n    //console.log('countDown is called');\n    timeValue = this.getCount();\n    //console.log( 'TimeValue is: ' + timeValue);\n    var minutes;\n    var seconds;\n    timeLeftInterval = setInterval(()=>{\n      //console.log( 'TimeValue is: ' + timeValue);\n      if(timeValue > 0){\n        timeValue--;\n        minutes = Math.floor(timeValue / 60);\n        seconds = (timeValue - (minutes * 60));\n        if (minutes < 10) { minutes = '0' + minutes; }\n        if (seconds < 10) { seconds = '0' + seconds; }\n        //console.log('Minutes: '+minutes);\n        //console.log('Seconds: '+ seconds);\n        if (minutes === '00') {\n          this.setState(()=>{return {timeDisplay: (minutes + ':' + seconds), color: 'red'}});\n        }\n        else {\n\n          this.setState(()=>{ return{timeDisplay: minutes + ':' + seconds, color: 'black'}});\n        }\n      }\n      else if (timeValue === 0) {\n        this.countEnd();\n      }\n      console.log('Display value: ' +this.state.timeDisplay);\n\n    },1000);\n\n\n  }\n\n  // Decrease the session or break length value\n  setDecrease(event){\n    var value = event.target.value;\n    var breakValue = this.state.breakV;\n    var sessionValue = this.state.session;\n    if (value === 'break') {\n      if(breakValue > 1){ this.setState(()=>{return {breakV: breakValue - 1 }});}\n      if(breakValue < 1){ this.setState(()=>{return {breakV: 1 }});}\n    }\n    else if (value === 'session') {\n      if(sessionValue > 1){ this.setState(()=>{return {session: sessionValue - 1 }});}\n      if(sessionValue < 1){ this.setState(()=>{return {session: 1 }});}\n    }\n  }\n  // Increase the session or break length value\n  setIncrease(event){\n    var value = event.target.value;\n    var breakValue = this.state.breakV;\n    var sessionValue = this.state.session;\n    if (value === 'break') {\n      if(breakValue <= 59 ){ this.setState(()=>{return {breakV: breakValue + 1 }});}\n      else{ this.setState(()=>{return {breakV: 60 }});}\n    }\n    else if (value === 'session') {\n      if(sessionValue <= 59){ this.setState(()=>{return {session: sessionValue + 1 }});}\n      else{ this.setState(()=>{return {session: 60 }});}\n    }\n  }\n  // Stop the timer and initialize variables\n  resetClock(){\n    clearInterval(timeLeftInterval);\n    var audioEL = document.getElementById('beep');\n    audioEL.pause();\n    audioEL.currentTime = 0;\n    this.setState(()=>{\n      return({breakV: 5, session: 25, timeDisplay: '25:00',\n              action: 'stop', timerLabel: 'Session', color: '#000000'} )});\n  }\n\n  render(){\n    var playIcon;\n    var playFunction;\n    var action = this.state.action;\n    if(action === 'pause' || action === 'stop'){\n      playIcon = \"fa fa-play-circle\";\n      playFunction = this.countDown;\n    }\n    else if (action === 'play') {\n      playIcon = \"fa fa-pause-circle\";\n      playFunction = this.stopTimer;\n    }\n\n    var left = {id: \"left\", increment: \"break-increment\",decrement: \"break-decrement\",value: 'break',\n                label: \"Set Break\",increase: this.setIncrease, decrease: this.setDecrease};\n    var right= {id:\"right\", increment: \"session-increment\",decrement: \"session-decrement\", value: 'session',\n                label: \"Set Session\",increase: this.setIncrease, decrease: this.setDecrease};\n    var displayValues = {breakV: this.state.breakV, session: this.state.session,\n                         mins: this.state.timeDisplay,\n                         timeLabel: this.state.timerLabel, color: this.state.color}; // mins: this.state.min, secs: this.state.sec\n    var clockControl = {initialize: this.resetClock, update: playFunction, icon: playIcon};\n    return (\n      <div id=\"clock\">\n        <Set {...left} />\n        <Exhibit {...displayValues}/>\n        <Set {...right}/>\n        <Control {...clockControl}/>\n        <audio id=\"beep\"  src={mp3} type='audio/mpeg' > </audio>\n        <div id=\"logo\">\n          <a href=\"https://nhope123.github.io/pomodoro/\" target=\"_blank\" rel=\"noopener noreferrer\" title=\" Github repository\">\n            <i className=\"fa fa-rebel\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n      </div>\n\n\n    );\n  }\n}\n","import React from 'react';\n\nexport class Exhibit extends React.Component{\n  render(){\n    return(\n      <section id=\"clock-face\"> {/* circular face */}\n        <div id=\"display-container\"> {/* display container */}\n          <div id=\"break-label\" >Break</div>{/*Break length text display*/}\n          <div id=\"session-label\" >Session</div>{/* Session length display */}\n          <div id=\"break-length\" >{this.props.breakV}</div>{/* Break length display */}\n          <div id=\"session-length\" >{this.props.session}</div>{/* Session length display */}\n          <div id=\"time-left\" style={{color: this.props.color}} >{this.props.mins}{/*:{this.props.secs}*/}</div>{/* Session time display */}\n          <div id=\"timer-label\" >{this.props.timeLabel}</div>{/* Session or Break text */}\n        </div>\n      </section>\n    );\n  }\n}\n","import React from 'react';\n\n\nexport class Set extends React.Component{\n\n  render(){\n    var increase = this.props.label + \" length increase\";\n    var decrease = this.props.label + \" length decrease\";\n    return(\n      <section id={this.props.id} className=\"section-set\">\n        <button id={this.props.increment} type=\"button\" title={increase} tabIndex=\"0\" onClick={this.props.increase} value={this.props.value}>\n          <i className=\"fa fa-chevron-up\" aria-hidden=\"true\" ></i>\n        </button>\n        <div >{this.props.label}</div>\n        <button id={this.props.decrement} type=\"button\"  title={decrease} tabIndex=\"0\" onClick={this.props.decrease} value={this.props.value}>\n          <i className=\"fa fa-chevron-down\" aria-hidden=\"true\"></i>\n        </button>\n      </section>\n    );\n  }\n}\n\nclass Operator extends React.Component{\n\n  render(){\n    return(\n      <article className={this.props.control}>\n        <button id={this.props.id} type=\"button\" tabIndex=\"0\" onClick={this.props.callBack}>\n          <i className={this.props.icon}  aria-hidden=\"true\"></i>\n        </button>\n        <div>{this.props.display}</div>\n      </article>\n    );\n  }\n\n}\n\nexport class Control extends React.Component{\n\n  render(){\n    var playOperator = {id: \"start_stop\",icon: this.props.icon,\n                        display:\"Play/Pause\", control:\"left-control\",\n                        callBack: this.props.update };\n    var resetOperator = {id: \"reset\", icon: \"fa fa-refresh\",\n                         display: \"Reset\", control: \"right-control\",\n                         callBack: this.props.initialize};\n    return (\n      <section id=\"control\">\n        <Operator {...playOperator} />\n        <Operator {...resetOperator} />\n      </section>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './display.css';\nimport './botton.css';\n/* import './clock.css'; */\nimport * as clock from \"./clock.js\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <clock.PomoClock />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}