{"version":3,"sources":["Alarm-clock-sound-short.mp3","clock.js","display.js","button.js","serviceWorker.js","index.js"],"names":["module","exports","timeValue","timeLeftInterval","count","Exhibit","id","this","props","breakV","session","style","color","mins","timeLabel","React","Component","Set","increase","label","decrease","className","increment","type","title","tabIndex","onClick","aria-hidden","decrement","Operator","control","callBack","icon","display","Control","playOperator","update","resetOperator","initialize","PomoClock","state","timeDisplay","action","timerLabel","resetClock","bind","getCount","countDown","countEnd","stopTimer","correctTime","sessionIncrease","sessionDecrease","breakIncrease","breakDecrease","setPauseDisplay","clearInterval","setState","labelT","document","getElementById","play","then","num","countTimer","value","split","parseInt","minutes","seconds","setInterval","Math","floor","val","setType","audioEL","pause","currentTime","playIcon","playFunction","left","right","displayValues","clockControl","src","mp3","href","target","rel","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9a7c1fea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Alarm-clock-sound-short.1d401d80.mp3\";","import React from 'react';\nimport './clock.css';\nimport {Exhibit} from './display.js';\nimport {Set, Control} from './button.js';\nimport mp3 from './Alarm-clock-sound-short.mp3';\n\n// Gobal variable\nlet timeValue; // value for checking the break and session\nlet timeLeftInterval; // variable for setting and clearing the iteration intervals\nlet count; // testing varable\n\n// Complete clock layout Component\nexport class PomoClock extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {breakV: 5, session: 25,\n                  timeDisplay: \"25:00\", action: 'stop',\n                  timerLabel: 'Session', color: '#000000'};\n    this.resetClock  = this.resetClock.bind(this);\n    this.getCount    = this.getCount.bind(this);\n    this.countDown   = this.countDown.bind(this);\n    this.countEnd    = this.countEnd.bind(this);\n    this.stopTimer   = this.stopTimer.bind(this);\n    this.correctTime = this.correctTime.bind(this);\n    this.sessionIncrease = this.sessionIncrease.bind(this);\n    this.sessionDecrease = this.sessionDecrease.bind(this);\n    this.breakIncrease = this.breakIncrease.bind(this);\n    this.breakDecrease = this.breakDecrease.bind(this);\n    this.setPauseDisplay = this.setPauseDisplay.bind(this);\n  }\n  // Stop / pause the timer\n  stopTimer(){\n    clearInterval(timeLeftInterval);\n    this.setState(()=>{return {action: 'pause'}});\n  }\n  // Process the completed counter and play alarm\n  countEnd(){\n    var labelT = (this.state.timerLabel === 'Session')?  'Break' : 'Session';\n    var audioPro = document.getElementById('beep').play();\n    audioPro.then();\n    clearInterval(timeLeftInterval);\n    this.setState(()=>{return {timeDisplay: '00:00',timerLabel: labelT}});\n    this.countDown();\n  }\n  // Add a zero before all single digit numbers\n  correctTime(num){\n    var number = num < 10 ? ('0'+ num) :num;\n    return number;\n  }\n  // Create the value to start counting from\n  getCount(){\n    var action = this.state.action;\n    var countTimer;\n    if(action === 'stop'){  // check if clock just loaded or clock was reset\n      countTimer = this.state.session * 60;\n      this.setState(()=>{return {action: 'play', timeDisplay: (this.correctTime(this.state.session) +':00'), color: 'black'}});\n    }\n    else if(action === 'pause'){ // Check if clock was paused;\n      var value = this.state.timeDisplay.split(':');\n      countTimer = (parseInt(value[0]) * 60) + parseInt(value[1]);\n      this.setState(()=>{return {action: 'play'}});\n    }\n    else if (action === 'play') { // Check and toggle between break and session counter\n      if (this.state.timerLabel === 'Break') {\n        countTimer = (this.state.breakV * 60);\n        this.setState(()=>{return {timeDisplay: (this.correctTime(this.state.breakV) +':00'), color: 'black'}});\n      }\n      else if (this.state.timerLabel === 'Session') {\n        countTimer = (this.state.session * 60);\n        this.setState(()=>{return {timeDisplay: (this.correctTime(this.state.session) +':00'), color: 'black'}});\n      }\n    }\n    return countTimer; // return the count down value\n  }\n  // Count down and display timer values\n  countDown(){\n    // Get converted time\n    timeValue = this.getCount();\n    var minutes;\n    var seconds;\n    timeLeftInterval = setInterval(()=>{\n      if(timeValue > 0){  // Once the time has not ran out reduce by 1 and get display time\n        timeValue--;\n        minutes = Math.floor(timeValue / 60);\n        seconds = (timeValue - (minutes * 60));\n        // Adjust time for mm:ss format\n        if (minutes < 10) { minutes = '0' + minutes; }\n        if (seconds < 10) { seconds = '0' + seconds; }\n        // Change timer to red for time less than 1min\n        if (minutes === '00') {\n          this.setState(()=>{return {timeDisplay: (minutes + ':' + seconds), color: 'red'}});\n        }\n        else {\n          this.setState(()=>{ return{timeDisplay: minutes + ':' + seconds, color: 'black'}});\n        }\n      }\n      else if (timeValue === 0) { // End iteration\n        this.countEnd();\n      }\n    },1000);\n  }\n  // Display ajusted timer when stopped and paused\n  setPauseDisplay(val, setType){\n    if(this.state.action === 'pause' || this.state.action === 'stop'){\n      if (setType === 'break' && this.state.timerLabel === 'Break') {\n        this.setState(()=>{return{timeDisplay: val}});\n      }\n      if (setType === 'session' && this.state.timerLabel === 'Session') {\n        this.setState(()=>{return{timeDisplay: val}});\n      }\n    }\n  }\n  // Decrease the Break length value\n  breakDecrease(){\n    count =  (this.state.breakV >= 2)? (this.state.breakV - 1) : 1 ;\n    this.setState( {breakV: count });\n    this.setPauseDisplay(count + ':00', 'break');\n  }\n  // Decrease the session length value\n  sessionDecrease(){\n    count = (this.state.session >= 2)? (this.state.session - 1 ) : 1 ;\n    this.setState( {session: count });\n    this.setPauseDisplay(count + ':00', 'session');\n  }\n  // Increase the Break length value\n  breakIncrease(){\n    count = (this.state.breakV <= 59)? (this.state.breakV + 1 ) : 60 ;\n    this.setState( {breakV: count });\n    this.setPauseDisplay(count + ':00', 'break');\n  }\n  // Increase the session length value\n  sessionIncrease(){\n    count = (this.state.session <= 59)? (this.state.session + 1 ) : 60 ;\n    this.setState( {session: count });\n    this.setPauseDisplay(count + ':00', 'session');\n  }\n  // Stop the timer and initialize variables\n  resetClock(){\n    clearInterval(timeLeftInterval); // Stop timer\n    this.setState(()=>{return {breakV: 5, session: 25, timeDisplay: '25:00',\n              action: 'stop', timerLabel: 'Session', color: '#000000'}} ); // Reset values\n    var audioEL = document.getElementById('beep'); // stop and rewind audio\n    audioEL.pause();\n    audioEL.currentTime = 0;\n  }\n  render(){\n    var playIcon;\n    var playFunction;\n    var action = this.state.action;\n    // Toogle play and pause icons\n    if(action === 'pause' || action === 'stop'){\n      playIcon = \"fa fa-play-circle\";\n      playFunction = this.countDown;\n    }\n    else if (action === 'play') {\n      playIcon = \"fa fa-pause-circle\";\n      playFunction = this.stopTimer;\n    }\n    // Values for the Break length Components\n    var left = {id: \"left\", increment: \"break-increment\",decrement: \"break-decrement\",\n                label: \"Set Break\",increase: this.breakIncrease, decrease: this.breakDecrease};\n    // Values for the Session length Components\n    var right= {id:\"right\", increment: \"session-increment\",decrement: \"session-decrement\",\n                label: \"Set Session\",increase: this.sessionIncrease, decrease: this.sessionDecrease};\n    // Values for the Display Components\n    var displayValues = {breakV: this.state.breakV, session: this.state.session,\n                         mins: this.state.timeDisplay,\n                         timeLabel: this.state.timerLabel, color: this.state.color};\n    // Values for the Control Components\n    var clockControl = {initialize: this.resetClock, update: playFunction, icon: playIcon};\n    return (\n      <div id=\"clock\">\n        <Set {...left} />\n        <Exhibit {...displayValues}/>\n        <Set {...right}/>\n        <Control {...clockControl}/>\n        <audio id=\"beep\"  src={mp3} type='audio/mpeg' > </audio>\n        <div id=\"logo\">\n          <a href=\"https://github.com/nhope123/pomodoro\" target=\"_blank\" rel=\"noopener noreferrer\" title=\" Github repository\">\n            <i className=\"fa fa-rebel\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\n// Component containing all elements for the timer display\nexport class Exhibit extends React.Component{\n  render(){\n    //console.log(this.props.mins);\n    return(\n      <section id=\"clock-face\"> {/* circular face */}\n        <div id=\"display-container\"> {/* display container */}\n          <div id=\"break-label\" >Break</div>{/*Break length text display*/}\n          <div id=\"session-label\" >Session</div>{/* Session length display */}\n          <div id=\"break-length\" >{this.props.breakV}</div>{/* Break length display */}\n          <div id=\"session-length\" >{this.props.session}</div>{/* Session length display */}\n          <div id=\"time-left\" style={{color: this.props.color}} >{this.props.mins}{/*:{this.props.secs}*/}</div>{/* Session time display */}\n          <div id=\"timer-label\" >{this.props.timeLabel}</div>{/* Session or Break text */}\n        </div>\n      </section>\n    );\n  }\n}\n","import React from 'react';\n\n// Component containing elements for setting the break and session lengths\nexport class Set extends React.Component{\n  render(){\n    var increase = this.props.label + \" length increase\";\n    var decrease = this.props.label + \" length decrease\";\n    return(\n      <section id={this.props.id} className=\"section-set\">\n        <button id={this.props.increment} type=\"button\" title={increase} tabIndex=\"0\" onClick={this.props.increase} >\n          <span className=\"fa fa-chevron-up\" aria-hidden=\"true\" onClick={this.props.increase} ></span>\n        </button>\n        <div >{this.props.label}</div>\n        <button id={this.props.decrement} type=\"button\"  title={decrease} tabIndex=\"0\" onClick={this.props.decrease} >\n          <span className=\"fa fa-chevron-down\" aria-hidden=\"true\" onClick={this.props.decrease}></span>\n        </button>\n      </section>\n    );\n  }\n}\n// Control sub-Component responsible for activation or deactivation of the timer\nclass Operator extends React.Component{\n  render(){\n    return(\n      <article className={this.props.control}>\n        <button id={this.props.id} type=\"button\" tabIndex=\"0\" onClick={this.props.callBack}>\n          <i className={this.props.icon}  aria-hidden=\"true\"></i>\n        </button>\n        <div>{this.props.display}</div>\n      </article>\n    );\n  }\n}\n// Component for controling the activation and deactivation of the timer\nexport class Control extends React.Component{\n\n  render(){\n    // Values for the play and pause button\n    var playOperator = {id: \"start_stop\",icon: this.props.icon,\n                        display:\"Play/Pause\", control:\"left-control\",\n                        callBack: this.props.update };\n    // Values for the reset button\n    var resetOperator = {id: \"reset\", icon: \"fa fa-refresh\",\n                         display: \"Reset\", control: \"right-control\",\n                         callBack: this.props.initialize};\n    return (\n      <section id=\"control\">\n        <Operator {...playOperator} />\n        <Operator {...resetOperator} />\n      </section>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './display.css';\nimport './botton.css';\n/* import './clock.css'; */\nimport * as clock from \"./clock.js\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <clock.PomoClock />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}